/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.Model_TT;
import repositories.Repositories_HD;
import repositories.Repositories_HDCT;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class View_TT extends javax.swing.JFrame {

    private repositories.Repositories_HD rp_HD = new Repositories_HD();
    private repositories.Repositories_HDCT rp_HDCT = new Repositories_HDCT();
    private DefaultTableModel mol = new DefaultTableModel();
    private int i = -1;

    /**
     * Creates new form View_TT
     */
    public View_TT() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.fillTable_HD(rp_HD.getAll_HD());
        this.fillTable_HDCT(rp_HDCT.getAll_HDCT());

        i = rp_HD.getAll_HD().size();
        this.showData_HD(i - 1);
        tbl_HD.setRowSelectionInterval(i - 1, i - 1);

        i = rp_HDCT.getAll_HDCT().size();
        this.showData_HDCT(i - 1);
        tbl_HDCT.setRowSelectionInterval(i - 1, i - 1);
    }

    void fillTable_HD(ArrayList<Model_TT> list_HD) {
        mol = (DefaultTableModel) tbl_HD.getModel();
        mol.setRowCount(0);
        for (Model_TT x : list_HD) {
            mol.addRow(x.toDataRow_HD());
        }
    }

    void fillTable_HDCT(ArrayList<Model_TT> list_HDCT) {
        mol = (DefaultTableModel) tbl_HDCT.getModel();
        mol.setRowCount(0);
        for (Model_TT x : list_HDCT) {
            mol.addRow(x.toDataRow_HDCT());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_MaHD = new javax.swing.JTextField();
        txt_MaKH = new javax.swing.JTextField();
        txt_MaNV = new javax.swing.JTextField();
        txt_DiaChi = new javax.swing.JTextField();
        txt_SDT = new javax.swing.JTextField();
        txt_SoPD = new javax.swing.JTextField();
        txt_T = new javax.swing.JTextField();
        txt_TC = new javax.swing.JTextField();
        txt_TT = new javax.swing.JTextField();
        rdo_DTT = new javax.swing.JRadioButton();
        rdo_CTT = new javax.swing.JRadioButton();
        txt_NXHD = new javax.swing.JTextField();
        txt_NTT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_HD = new javax.swing.JTable();
        btn_TK = new javax.swing.JButton();
        btn_S = new javax.swing.JButton();
        btn_X = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txt_MaHDCT = new javax.swing.JTextField();
        txt_MaDDV = new javax.swing.JTextField();
        txt_MaHD1 = new javax.swing.JTextField();
        txt_MaP = new javax.swing.JTextField();
        txt_MaKM = new javax.swing.JTextField();
        txt_GSKM = new javax.swing.JTextField();
        txt_GBD = new javax.swing.JTextField();
        txt_NTT1 = new javax.swing.JTextField();
        txt_CI = new javax.swing.JTextField();
        txt_CO = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_HDCT = new javax.swing.JTable();
        btn_TK1 = new javax.swing.JButton();
        btn_S1 = new javax.swing.JButton();
        btn_X1 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        txt_TTDV = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txt_TTP = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTabbedPane1.setBackground(new java.awt.Color(255, 153, 102));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFocusable(false);
        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Ngày Xuất Hóa Đơn:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Mã Hóa Đơn:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Mã Khách Hàng:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Mã Nhân Viên:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("SDT:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Trạng Thái:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Địa Chỉ:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Số Phòng Đặt:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Ngày Thanh Toán:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setText("Tiền Cọc:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setText("Thuế:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setText("Tổng Tiền:");

        txt_MaHD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_MaKH.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_MaNV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_DiaChi.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_SDT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_SoPD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_T.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_TC.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_TT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        buttonGroup1.add(rdo_DTT);
        rdo_DTT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rdo_DTT.setText("Đã Thanh Toán");

        buttonGroup1.add(rdo_CTT);
        rdo_CTT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rdo_CTT.setText("Chưa Thanh Toán");

        txt_NXHD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_NTT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tbl_HD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã HD", "Mã KH", "Mã NV", "SDT", "Địa Chỉ", "Số Phòng Đặt", "Trạng Thái", "Ngày Xuất Đơn", "Ngày Thanh Toán", "Thuế", "Tiền Cọc", "Tổng Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_HD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_HD);

        btn_TK.setBackground(new java.awt.Color(255, 204, 153));
        btn_TK.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_TK.setText("Tìm Kiếm");
        btn_TK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TKActionPerformed(evt);
            }
        });

        btn_S.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_S.setText("Sửa");
        btn_S.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SActionPerformed(evt);
            }
        });

        btn_X.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_X.setText("Xóa");
        btn_X.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_TK)
                        .addGap(203, 203, 203)
                        .addComponent(btn_S, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_X, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_NXHD, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                            .addComponent(txt_NTT)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txt_TC, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txt_T, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(txt_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rdo_DTT)
                                    .addComponent(txt_MaHD, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(txt_MaNV)
                                    .addComponent(txt_SoPD)))
                            .addComponent(jLabel6))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_DiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdo_CTT)
                                .addGap(131, 131, 131))))
                    .addComponent(jScrollPane1))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txt_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_DiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txt_SoPD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(rdo_DTT)
                    .addComponent(rdo_CTT))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txt_NXHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_NTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_TC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txt_T, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txt_TT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_TK)
                    .addComponent(btn_S)
                    .addComponent(btn_X))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Hóa Đơn", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setText("Check In");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel14.setText("Mã HDCT");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel15.setText("Mã DDV");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel16.setText("Mã HD");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel17.setText("Mã P");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel20.setText("Mã KM");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel21.setText("Check Out");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel22.setText("Giá Ban Đầu");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel23.setText("Giá Sau KM");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel24.setText("Ngày TT");

        txt_MaHDCT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_MaDDV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_MaHD1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_MaP.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_MaKM.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_GSKM.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_GBD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_NTT1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txt_CI.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_CI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CIActionPerformed(evt);
            }
        });

        txt_CO.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tbl_HDCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã HDCT", "Mã KM", "Mã HD", "Mã DDV", "Mã P", "Check In", "Check Out", "Giá BD", "Giá SKM", "Tổng TDV", "Tổng TP", "Ngày TT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_HDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HDCTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_HDCT);

        btn_TK1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_TK1.setText("Tìm Kiếm");
        btn_TK1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TK1ActionPerformed(evt);
            }
        });

        btn_S1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_S1.setText("Sửa");
        btn_S1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_S1ActionPerformed(evt);
            }
        });

        btn_X1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_X1.setText("Xóa");
        btn_X1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_X1ActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel25.setText("Tổng TDV");

        txt_TTDV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel26.setText("Tổng TP");

        txt_TTP.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_TK1)
                        .addGap(197, 197, 197)
                        .addComponent(btn_S1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 235, Short.MAX_VALUE)
                        .addComponent(btn_X1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel20))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_MaHD1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(txt_MaDDV)
                                    .addComponent(txt_MaKM)
                                    .addComponent(txt_MaHDCT, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(56, 56, 56)
                                .addComponent(txt_MaP))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_TTDV)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_CI, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel21)
                                    .addGap(33, 33, 33)
                                    .addComponent(txt_CO, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel24)
                                    .addGap(47, 47, 47)
                                    .addComponent(txt_NTT1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel22)
                                    .addGap(18, 18, 18)
                                    .addComponent(txt_GBD, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel26))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_GSKM)
                                    .addComponent(txt_TTP, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(42, 42, 42))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(txt_MaHDCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txt_MaHD1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txt_MaDDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel20))
                            .addComponent(txt_MaKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txt_MaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(txt_CI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(txt_CO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(txt_NTT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(txt_GBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(txt_GSKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(43, 43, 43)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txt_TTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(txt_TTDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_TK1)
                    .addComponent(btn_S1)
                    .addComponent(btn_X1))
                .addGap(71, 71, 71)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Hóa Đơn Chi Tiết", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_XActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XActionPerformed
        // TODO add your handling code here:
        i = tbl_HD.getSelectedRow();
        if (i != -1) {
            String maHD = String.valueOf(tbl_HD.getValueAt(i, 0));
            if (rp_HD.xoaHD(maHD) > 0) {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                this.fillTable_HD(rp_HD.getAll_HD());
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn dòng");
        }
    }//GEN-LAST:event_btn_XActionPerformed

    private void tbl_HDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HDMouseClicked
        // TODO add your handling code here:
        i = tbl_HD.getSelectedRow();
        this.showData_HD(i);
    }//GEN-LAST:event_tbl_HDMouseClicked

    private void tbl_HDCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HDCTMouseClicked
        // TODO add your handling code here:
        i = tbl_HDCT.getSelectedRow();
        this.showData_HDCT(i);
    }//GEN-LAST:event_tbl_HDCTMouseClicked

    private void btn_X1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_X1ActionPerformed
        // TODO add your handling code here:
        i = tbl_HDCT.getSelectedRow();
        if (i != -1) {
            String maHDCT = String.valueOf(tbl_HDCT.getValueAt(i, 0));
            if (rp_HDCT.xoaHDCT(maHDCT) > 0) {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                this.fillTable_HDCT(rp_HDCT.getAll_HDCT());
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn dòng");
        }
    }//GEN-LAST:event_btn_X1ActionPerformed

    private void txt_CIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_CIActionPerformed

    private void btn_TK1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TK1ActionPerformed
        // TODO add your handling code here:
        String maHdCT = JOptionPane.showInputDialog(this, "Mời bạn nhập mã cần tìm:");
        if (rp_HDCT.timkiem_MHDCT(maHdCT).isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy Mã");
        } else {
            JOptionPane.showMessageDialog(this, "Tìm thấy ngành - KQ in trên bảng");
            this.fillTable_HD(rp_HDCT.timkiem_MHDCT(maHdCT));
        }
    }//GEN-LAST:event_btn_TK1ActionPerformed

    private void btn_TKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TKActionPerformed
        // TODO add your handling code here:
        String maHd = JOptionPane.showInputDialog(this, "Mời bạn nhập mã cần tìm:");
        if (rp_HD.timkiem_MHD(maHd).isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy Mã");
        } else {
            JOptionPane.showMessageDialog(this, "Tìm thấy ngành - KQ in trên bảng");
            this.fillTable_HD(rp_HD.timkiem_MHD(maHd));
        }
    }//GEN-LAST:event_btn_TKActionPerformed

    private void btn_SActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SActionPerformed
        // TODO add your handling code here:
        i = tbl_HD.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(this, "bạn chưa chọn dòng");

        } else {
        }
        if (this.readFrom_HD() != null) {
            rp_HD.suaHoaDon(txt_MaHD.getText(), this.readFrom_HD());
            JOptionPane.showMessageDialog(this, "Sửa thành công");
            this.fillTable_HD(rp_HD.getAll_HD());
        }
    }//GEN-LAST:event_btn_SActionPerformed

    private void btn_S1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_S1ActionPerformed
        // TODO add your handling code here:
        i = tbl_HDCT.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(this, "bạn chưa chọn dòng");

        } else {
        }
        if (this.readFrom_HDCT()!= null) {
            rp_HDCT.suaHoaDonChiTiet(txt_MaHDCT.getText(), this.readFrom_HDCT());
            JOptionPane.showMessageDialog(this, "Sửa thành công");
            this.fillTable_HDCT(rp_HDCT.getAll_HDCT());
        }
    }//GEN-LAST:event_btn_S1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_TT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_TT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_TT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_TT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View_TT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_S;
    private javax.swing.JButton btn_S1;
    private javax.swing.JButton btn_TK;
    private javax.swing.JButton btn_TK1;
    private javax.swing.JButton btn_X;
    private javax.swing.JButton btn_X1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdo_CTT;
    private javax.swing.JRadioButton rdo_DTT;
    private javax.swing.JTable tbl_HD;
    private javax.swing.JTable tbl_HDCT;
    private javax.swing.JTextField txt_CI;
    private javax.swing.JTextField txt_CO;
    private javax.swing.JTextField txt_DiaChi;
    private javax.swing.JTextField txt_GBD;
    private javax.swing.JTextField txt_GSKM;
    private javax.swing.JTextField txt_MaDDV;
    private javax.swing.JTextField txt_MaHD;
    private javax.swing.JTextField txt_MaHD1;
    private javax.swing.JTextField txt_MaHDCT;
    private javax.swing.JTextField txt_MaKH;
    private javax.swing.JTextField txt_MaKM;
    private javax.swing.JTextField txt_MaNV;
    private javax.swing.JTextField txt_MaP;
    private javax.swing.JTextField txt_NTT;
    private javax.swing.JTextField txt_NTT1;
    private javax.swing.JTextField txt_NXHD;
    private javax.swing.JTextField txt_SDT;
    private javax.swing.JTextField txt_SoPD;
    private javax.swing.JTextField txt_T;
    private javax.swing.JTextField txt_TC;
    private javax.swing.JTextField txt_TT;
    private javax.swing.JTextField txt_TTDV;
    private javax.swing.JTextField txt_TTP;
    // End of variables declaration//GEN-END:variables
void showData_HD(int i) {
        txt_MaHD.setText(tbl_HD.getValueAt(i, 0).toString());
        txt_MaKH.setText(tbl_HD.getValueAt(i, 1).toString());
        txt_MaNV.setText(tbl_HD.getValueAt(i, 2).toString());
        txt_SDT.setText(tbl_HD.getValueAt(i, 3).toString());
        txt_DiaChi.setText(tbl_HD.getValueAt(i, 4).toString());
        txt_SoPD.setText(tbl_HD.getValueAt(i, 5).toString());
        if (tbl_HD.getValueAt(i, 6).toString().equalsIgnoreCase("Đã Thanh Toán")) {
            rdo_DTT.setSelected(true);
        } else {
            rdo_CTT.setSelected(true);
        }
        txt_NXHD.setText(tbl_HD.getValueAt(i, 7).toString());
        txt_NTT.setText(tbl_HD.getValueAt(i, 8).toString());
        txt_T.setText(tbl_HD.getValueAt(i, 9).toString());
        txt_TC.setText(tbl_HD.getValueAt(i, 10).toString());
        txt_TT.setText(tbl_HD.getValueAt(i, 11).toString());
    }

    void showData_HDCT(int i) {
        txt_MaHDCT.setText(tbl_HDCT.getValueAt(i, 0).toString());
        txt_MaKM.setText(tbl_HDCT.getValueAt(i, 1).toString());
        txt_MaHD1.setText(tbl_HDCT.getValueAt(i, 2).toString());
        txt_MaDDV.setText(tbl_HDCT.getValueAt(i, 3).toString());
        txt_MaP.setText(tbl_HDCT.getValueAt(i, 4).toString());
        txt_CI.setText(tbl_HDCT.getValueAt(i, 5).toString());
        txt_CO.setText(tbl_HDCT.getValueAt(i, 6).toString());
        txt_GBD.setText(tbl_HDCT.getValueAt(i, 7).toString());
        txt_GSKM.setText(tbl_HDCT.getValueAt(i, 8).toString());
        txt_TTDV.setText(tbl_HDCT.getValueAt(i, 9).toString());
        txt_TTP.setText(tbl_HDCT.getValueAt(i, 10).toString());
        txt_NTT1.setText(tbl_HDCT.getValueAt(i, 11).toString());
    }

    Model_TT readFrom_HD() {
        String maHD;
        String maKH;
        String maNV;
        String soDienThoai;
        String diaChi;
        int soPhongDat;
        String trangThai;
        Date ngayXuatDon;
        Date ngayThanhToan;
        double thue;
        double tienCoc;
        double tongTien;


        maHD = txt_MaHD.getText().trim();
        if (maHD.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã hóa đơn");
            txt_MaHD.requestFocus();
            return null;
        }

        maKH = txt_MaKH.getText().trim();
        if (maKH.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã khách hàng");
            txt_MaKH.requestFocus();
            return null;
        }

        maNV = txt_MaNV.getText().trim();
        if (maNV.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã nhân viên");
            txt_MaNV.requestFocus();
            return null;
        }

        soDienThoai = txt_SDT.getText().trim();
        if (soDienThoai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số điện thoại");
            txt_SDT.requestFocus();
            return null;
        }

        diaChi = txt_DiaChi.getText().trim();
        if (diaChi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập địa chỉ");
            txt_DiaChi.requestFocus();
            return null;
        }

        if (txt_SoPD.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số phòng đặt");
            txt_SoPD.requestFocus();
            return null;
        }

        try {
            soPhongDat = Integer.parseInt(txt_SoPD.getText());
            if (soPhongDat <= 0) {
                JOptionPane.showMessageDialog(this, "Số phòng đặt không hợp lệ");
                txt_SoPD.requestFocus();
                return null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số phòng đặt phải là số");
            txt_SoPD.requestFocus();
            return null;
        }

        if (rdo_DTT.isSelected()) {
            trangThai = rdo_DTT.getText();
        } else if (rdo_CTT.isSelected()) {
            trangThai = rdo_CTT.getText();
        } else {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn trạng thái");
            return null;
        }

        try {
            ngayXuatDon = new SimpleDateFormat("dd/MM/yyyy").parse(txt_NXHD.getText().trim());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Ngày xuất đơn không hợp lệ - sửa theo định dạng này dd/MM/yyyy");
            txt_NXHD.requestFocus();
            return null;
        }

        try {
            ngayThanhToan = new SimpleDateFormat("dd/MM/yyyy").parse(txt_NTT.getText().trim());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Ngày thanh toán không hợp lệ - sửa theo định dạng này dd/MM/yyyy");
            txt_NTT.requestFocus();
            return null;
        }

        try {
            thue = Double.parseDouble(txt_T.getText().trim());
            if (thue < 0) {
                JOptionPane.showMessageDialog(this, "Thuế không hợp lệ");
                txt_T.requestFocus();
                return null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Thuế phải là số");
            txt_T.requestFocus();
            return null;
        }

        try {
            tienCoc = Double.parseDouble(txt_TC.getText().trim());
            if (tienCoc < 0) {
                JOptionPane.showMessageDialog(this, "Tiền cọc không hợp lệ");
                txt_TC.requestFocus();
                return null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Tiền cọc phải là số");
            txt_TC.requestFocus();
            return null;
        }

        try {
            tongTien = Double.parseDouble(txt_TT.getText().trim());
            if (tongTien < 0) {
                JOptionPane.showMessageDialog(this, "Tổng tiền không hợp lệ");
                txt_TT.requestFocus();
                return null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Tổng tiền phải là số");
            txt_TT.requestFocus();
            return null;
        }
        

        return new Model_TT(maHD, maKH, maNV, soDienThoai, diaChi, soPhongDat, trangThai, ngayXuatDon, ngayThanhToan, thue, tienCoc, tongTien, maHD, maKH, maHD, maNV, maNV, ngayXuatDon, ngayXuatDon, tienCoc, tienCoc, tongTien, tongTien, ngayThanhToan);

    }
    
    Model_TT readFrom_HDCT() {
        String maHDCT;
        String maKM;
        String MaHD1;
        String maDDV;
        String maP;
        Date checkIn;
        Date checkOut;
        double giaBanDau;
        double giaSauKhuyenMai;
        double tongGiaDichVu;
        double tongTienPhong;
        Date ngayThanhToan1;
        
        maHDCT = txt_MaHDCT.getText().trim();
        if (maHDCT.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã hóa đơn chi tiết");
            txt_MaHDCT.requestFocus();
            return null;
        }

        maKM = txt_MaKM.getText().trim();
        if (maKM.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã khuyến mãi");
            txt_MaKM.requestFocus();
            return null;
        }
        
        MaHD1 = txt_MaHD1.getText().trim();
        if (MaHD1.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã hóa đơn");
            txt_MaHD1.requestFocus();
            return null;
        }

        maDDV = txt_MaDDV.getText().trim();
        if (maDDV.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã dịch vụ");
            txt_MaDDV.requestFocus();
            return null;
        }

        maP = txt_MaP.getText().trim();
        if (maP.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã phòng");
            txt_MaP.requestFocus();
            return null;
        }

        try {
            checkIn = new SimpleDateFormat("dd/MM/yyyy").parse(txt_CI.getText().trim());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Ngày xuất đơn không hợp lệ - sửa theo định dạng này dd/MM/yyyy");
            txt_CI.requestFocus();
            return null;
        }

        try {
            checkOut = new SimpleDateFormat("dd/MM/yyyy").parse(txt_CO.getText().trim());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Ngày xuất đơn không hợp lệ - sửa theo định dạng này dd/MM/yyyy");
            txt_CO.requestFocus();
            return null;
        }

        try {
            giaBanDau = Double.parseDouble(txt_GBD.getText().trim());
            if (giaBanDau < 0) {
                JOptionPane.showMessageDialog(this, "Giá ban đầu không hợp lệ");
                txt_GBD.requestFocus();
                return null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Giá ban đầu phải là số");
            txt_GBD.requestFocus();
            return null;
        }

        try {
            giaSauKhuyenMai = Double.parseDouble(txt_GSKM.getText().trim());
            if (giaSauKhuyenMai < 0) {
                JOptionPane.showMessageDialog(this, "Giá sau khuyến mãi không hợp lệ");
                txt_GSKM.requestFocus();
                return null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Giá sau khuyến mãi phải là số");
            txt_GSKM.requestFocus();
            return null;
        }

        try {
            tongGiaDichVu = Double.parseDouble(txt_TTDV.getText().trim());
            if (tongGiaDichVu < 0) {
                JOptionPane.showMessageDialog(this, "Tổng giá dịch vụ không hợp lệ");
                txt_TTDV.requestFocus();
                return null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Tổng giá dịch vụ phải là số");
            txt_TTDV.requestFocus();
            return null;
        }

        try {
            tongTienPhong = Double.parseDouble(txt_TTP.getText().trim());
            if (tongTienPhong < 0) {
                JOptionPane.showMessageDialog(this, "Tổng tiền phòng không hợp lệ");
                txt_TTP.requestFocus();
                return null;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Tổng tiền phòng phải là số");
            txt_TTP.requestFocus();
            return null;
        }
        
        try {
            ngayThanhToan1 = new SimpleDateFormat("dd/MM/yyyy").parse(txt_NTT1.getText().trim());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Ngày thanh toán không hợp lệ - sửa theo định dạng này dd/MM/yyyy");
            txt_NTT1.requestFocus();
            return null;
        }
        
        return new Model_TT(MaHD1, maKM, maP, maP, maP, HEIGHT, MaHD1, ngayThanhToan1, ngayThanhToan1, giaBanDau, giaBanDau, tongTienPhong, maHDCT, maKM, maHDCT, maDDV, maP, checkIn, checkOut, giaBanDau, giaSauKhuyenMai, tongGiaDichVu, tongTienPhong, ngayThanhToan1);
    
    }

}
